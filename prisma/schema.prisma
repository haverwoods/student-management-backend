generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  role     Role
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

// Student model with essential information
model Student {
  id           Int       @id @default(autoincrement())  // Using Int as ID
  rollNumber   String    @unique                       // School-assigned student ID
  firstName    String
  lastName     String
  dateOfBirth  DateTime
  grade        Int       // Current grade/class level
  section      String    // Class section (A, B, C, etc.)
  contactPhone String?

  // Academic records
  enrollments  Enrollment[]
  attendances  Attendance[]

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Teacher {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  phone     String
  courses   Course[] @relation("CourseTeacher")
}

// Course information
model Course {
  id          String    @id @default(uuid())
  name        String
  grade       Int
  section     String
  teacherId   Int?      // Make teacherId nullable
  teacher     Teacher?  @relation("CourseTeacher", fields: [teacherId], references: [id]) // Make teacher nullable
  enrollments Enrollment[]
  attendances Attendance[]
}


// Track student course enrollment
model Enrollment {
  id        String   @id @default(uuid())
  studentId Int      // Changed from String to Int to match Student.id
  courseId  String
  status    Status   @default(ACTIVE)

  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([studentId, courseId])
}

// Track student attendance
model Attendance {
  id        String   @id @default(uuid())
  studentId Int      // Changed from String to Int to match Student.id
  courseId  String
  date      DateTime
  present   Boolean

  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([studentId, courseId, date])
}

enum Status {
  ACTIVE
  INACTIVE
}
